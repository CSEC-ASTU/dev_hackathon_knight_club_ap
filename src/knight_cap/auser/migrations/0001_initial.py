# Generated by Django 3.2.12 on 2022-05-08 02:01

import auser.validators
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[auser.validators.PhoneNumberValidator()], verbose_name='phone number')),
                ('location', models.CharField(blank=True, help_text='Physical location.', max_length=200, null=True, verbose_name='address')),
                ('po_box', models.CharField(blank=True, max_length=10, null=True, verbose_name='P.O Box')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('sex', models.CharField(blank=True, choices=[('M', 'MALE'), ('F', 'FEMALE')], max_length=2, null=True, verbose_name='sex')),
                ('bio', models.TextField(blank=True, help_text='Tell us about your self', null=True, verbose_name='Bio')),
                ('profile_picture', models.ImageField(default='default.svg', upload_to='profile_pictures/', verbose_name='Profile picture')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting account', verbose_name='active')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Division long name.', max_length=100, verbose_name='Division name')),
                ('short_name', models.CharField(help_text='Division short name.', max_length=50, verbose_name='Division short name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='divisions/logos', verbose_name='Division logo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Division description')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_divisions', to='auser.division')),
            ],
            options={
                'verbose_name': 'division',
                'verbose_name_plural': 'divisions',
                'db_table': 'division',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Position long name.', max_length=100, verbose_name='Position name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Position description')),
                ('division', models.ForeignKey(blank=True, help_text='Division to which this position belongs/related.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='auser.division')),
                ('permissions', models.ManyToManyField(blank=True, related_name='positions', to='auth.Permission')),
            ],
            options={
                'verbose_name': 'position',
                'verbose_name_plural': 'positions',
                'db_table': 'position',
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auser.user')),
                ('name', models.CharField(help_text='Club long name.', max_length=100, verbose_name='Club name')),
                ('short_name', models.CharField(help_text='Club short name.', max_length=50, verbose_name='Club short name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='clubs/logos', verbose_name='Club logo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Club description')),
            ],
            options={
                'verbose_name': 'club',
                'verbose_name_plural': 'clubs',
                'db_table': 'club',
                'permissions': (('activate_club', 'Can activate club'), ('deactivate_club', 'Can deactivate club')),
            },
            bases=('auser.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted')], default='active', max_length=10, verbose_name='Status')),
                ('date_assigned', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='auser.position')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_positions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user position',
                'verbose_name_plural': 'user positions',
                'db_table': 'user_position',
            },
        ),
        migrations.AddField(
            model_name='position',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='auser.club'),
        ),
        migrations.AddField(
            model_name='division',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='auser.club'),
        ),
    ]
